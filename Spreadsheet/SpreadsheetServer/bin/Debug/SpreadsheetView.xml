<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpreadsheetView</name>
    </assembly>
    <members>
        <member name="T:SpreadsheetView.SpreadsheetPanel">
            <summary>
            A panel that displays a spreadsheet with 26 columns (labeled A-Z) and 99 rows
            (labeled 1-99).  Each cell on the grid can display a non-editable string.  One 
            of the cells is always selected (and highlighted).  When the selection changes, a 
            SelectionChanged event is fired.  Clients can register to be notified of
            such events.
            
            None of the cells are editable.  They are for display purposes only.
            </summary>
        </member>
        <member name="F:SpreadsheetView.SpreadsheetPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetPanel.#ctor">
            <summary>
            Creates an empty SpreadsheetPanel
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetPanel.Clear">
            <summary>
            Clears the display.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetPanel.SetValue(System.Int32,System.Int32,System.String)">
            <summary>
            If the zero-based column and row are in range, sets the value of that
            cell and returns true.  Otherwise, returns false.
            </summary>
            <param name="col"></param>
            <param name="row"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetPanel.GetValue(System.Int32,System.Int32,System.String@)">
            <summary>
            If the zero-based column and row are in range, assigns the value
            of that cell to the out parameter and returns true.  Otherwise,
            returns false.
            </summary>
            <param name="col"></param>
            <param name="row"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetPanel.SetSelection(System.Int32,System.Int32)">
            <summary>
            If the zero-based column and row are in range, uses them to set
            the current selection and returns true.  Otherwise, returns false.
            </summary>
            <param name="col"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetPanel.GetSelection(System.Int32@,System.Int32@)">
            <summary>
            Assigns the column and row of the current selection to the
            out parameters.
            </summary>
            <param name="col"></param>
            <param name="row"></param>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetPanel.OnResize(System.EventArgs)">
            <summary>
            When the SpreadsheetPanel is resized, we set the size and locations of the three
            components that make it up.
            </summary>
            <param name="eventargs"></param>
        </member>
        <member name="E:SpreadsheetView.SpreadsheetPanel.SelectionChanged">
            <summary>
            The event used to send notifications of a selection change
            </summary>
        </member>
        <member name="T:SpreadsheetView.SpreadsheetPanel.Address">
            <summary>
            Used internally to keep track of cell addresses
            </summary>
        </member>
        <member name="T:SpreadsheetView.SpreadsheetPanel.DrawingPanel">
            <summary>
            The panel where the spreadsheet grid is drawn.  It keeps track of the
            current selection as well as what is supposed to be drawn in each cell.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetPanel.DrawingPanel.DrawColumnLabel(System.Drawing.Graphics,System.Int32,System.Drawing.Font)">
            <summary>
            Draws a column label.  The columns are indexed beginning with zero.
            </summary>
            <param name="g"></param>
            <param name="x"></param>
            <param name="f"></param>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetPanel.DrawingPanel.DrawRowLabel(System.Drawing.Graphics,System.Int32,System.Drawing.Font)">
            <summary>
            Draws a row label.  The rows are indexed beginning with zero.
            </summary>
            <param name="g"></param>
            <param name="y"></param>
            <param name="f"></param>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetPanel.DrawingPanel.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Determines which cell, if any, was clicked.  Generates a SelectionChanged event.  All of
            the indexes are zero based.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:SpreadsheetView.SelectionChangedHandler">
            <summary>
            The type of delegate used to register for SelectionChanged events
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:SpreadsheetView.Program">
            <summary>
            Runs the Spreadsheet Form Application
            </summary>
        </member>
        <member name="M:SpreadsheetView.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:SpreadsheetView.SpreadSheetApplicationContext">
            <summary>
            Keeps track of how many top-level spreadsheet forms are running.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadSheetApplicationContext.#ctor">
            <summary>
            Private constructor for singleton pattern.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadSheetApplicationContext.GetSpreadsheetAppContext">
            <summary>
            Returns the currnent SpreadSheetApplicationContext.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadSheetApplicationContext.RunForm(System.Windows.Forms.Form)">
            <summary>
            Runs the spreadsheet form.
            </summary>
        </member>
        <member name="T:SpreadsheetView.InputBox">
            <summary>
            Form used to retreive spreadsheet names and passwords.
            </summary>
        </member>
        <member name="M:SpreadsheetView.InputBox.#ctor(SpreadsheetView.SpreadsheetForm,System.Boolean)">
            <summary>
            Initializes input box.
            </summary>
        </member>
        <member name="M:SpreadsheetView.InputBox.OkButtonClick(System.Object,System.EventArgs)">
            <summary>
            Ok button handler
            </summary>
        </member>
        <member name="M:SpreadsheetView.InputBox.CancelButtonClick(System.Object,System.EventArgs)">
            <summary>
            Cancel button handler
            </summary>
        </member>
        <member name="M:SpreadsheetView.InputBox.TextBoxPressEnter(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Enter button handler
            </summary>
        </member>
        <member name="F:SpreadsheetView.InputBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpreadsheetView.InputBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpreadsheetView.InputBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpreadsheetView.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.DefaultSpreadsheetName">
            <summary>
              Looks up a localized string similar to New Spreadsheet.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTextCircularReference">
            <summary>
              Looks up a localized string similar to Invalid Formula: The formula cannot have circular references..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTextCouldNotOpenNew">
            <summary>
              Looks up a localized string similar to Could not open new spreadsheet..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTextFileLoad">
            <summary>
              Looks up a localized string similar to An error has occurred populating the cells.  Invalid cell coordinates in file..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTextFormulaFormat">
            <summary>
              Looks up a localized string similar to Invalid Formula: The formula is not correctly formatted..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTextNoChangesMade">
            <summary>
              Looks up a localized string similar to No recent changes have been made or saved..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTextOpeningFile">
            <summary>
              Looks up a localized string similar to An error has occurred opening the file..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTextOpeningFileUnknown">
            <summary>
              Looks up a localized string similar to An unknown error has occurred opening the file..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTextRecalculatingCells">
            <summary>
              Looks up a localized string similar to An error has occurred recalculating the cells.  Please verify that all formulas are valid and reference valid cell names..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTextSavingFile">
            <summary>
              Looks up a localized string similar to An error has occurred saving the file..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTextSavingFileUnknown">
            <summary>
              Looks up a localized string similar to An unknown error has occurred saving the file..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTextUndoUnknown">
            <summary>
              Looks up a localized string similar to An unknown error has occurred undoing the previous operation..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTextUnknown">
            <summary>
              Looks up a localized string similar to An unknown error has occurred..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.ErrorDialogTitle">
            <summary>
              Looks up a localized string similar to Spreadsheet Error.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.HelpDialogTextAbout1">
            <summary>
              Looks up a localized string similar to CS3505 Cloud Spreadsheet.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.HelpDialogTextAbout2">
            <summary>
              Looks up a localized string similar to Windows Forms Spreadsheet Application v. 1.0.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.HelpDialogTextAbout3">
            <summary>
              Looks up a localized string similar to CS 3505 Spring 2013.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.HelpDialogTextAbout4">
            <summary>
              Looks up a localized string similar to University of Utah.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.HelpDialogTextAbout5">
            <summary>
              Looks up a localized string similar to by John Chase, Thomas Gonsor, Michael Quigley, Zach Wilcox.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.HelpDialogTextContents1">
            <summary>
              Looks up a localized string similar to Using the Spreadsheet.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.HelpDialogTextContents2">
            <summary>
              Looks up a localized string similar to You can set the contents of a cell by typing text into the Contents box. The cells accept numbers, plain text or formulas as their contents.  Formulas need to have the equals sign (=) in front of them and need to use standard infix notation in order for the spreadsheet to accurately calculate the end value (e.g. =A2/A3 + A4*(A5 - 1)). Additionally any cells referenced in the formula need to have a numeric value associated with them..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.HelpDialogTextContents3">
            <summary>
              Looks up a localized string similar to You can select different cells by using the mouse, the arrow keys or by pressing Enter. If you want to save, open or create a new spreadsheet, simply use the file menu. You can have multiple spreadsheets open at a time. Enjoy!.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.HelpDialogTitle">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.InputBoxLabelNameText">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.InputBoxLabelPasswordText">
            <summary>
              Looks up a localized string similar to Password:.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.InputBoxTextEdit">
            <summary>
              Looks up a localized string similar to Please enter the name of the spreadsheet you would like to edit..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.InputBoxTextNew">
            <summary>
              Looks up a localized string similar to Please enter the name of the spreadsheet you would like to create..
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.OpenDialogTitle">
            <summary>
              Looks up a localized string similar to Open a Spreadsheet File.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.SaveAsDialogFileFilterTypes">
            <summary>
              Looks up a localized string similar to Spreadsheet Files (*.ss)|*.ss|All Files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.SaveAsDialogTitle">
            <summary>
              Looks up a localized string similar to Save a Spreadsheet File.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.SaveChangesDialogText">
            <summary>
              Looks up a localized string similar to Do you want to save the changes you made to &quot;%&quot; ?.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.SaveChangesDialogTitle">
            <summary>
              Looks up a localized string similar to Save Changes?.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.SpreadsheetFileExtension">
            <summary>
              Looks up a localized string similar to .ss.
            </summary>
        </member>
        <member name="P:SpreadsheetView.Properties.Resources.SpreadsheetIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="T:SpreadsheetView.ConnectBox">
            <summary>
            Form used to connect to the server.
            </summary>
        </member>
        <member name="F:SpreadsheetView.ConnectBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpreadsheetView.ConnectBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpreadsheetView.ConnectBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SpreadsheetView.ConnectBox.#ctor(SpreadsheetView.SpreadsheetForm)">
            <summary>
            Initializes connect box
            </summary>
        </member>
        <member name="M:SpreadsheetView.ConnectBox.ConnectButton_Click(System.Object,System.EventArgs)">
            <summary>
            Connect button handler
            </summary>
        </member>
        <member name="M:SpreadsheetView.ConnectBox.CancelButton_Click(System.Object,System.EventArgs)">
            <summary>
            Cancel button handler
            </summary>
        </member>
        <member name="M:SpreadsheetView.ConnectBox.ConnectBox_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Close event handler
            </summary>
        </member>
        <member name="M:SpreadsheetView.ConnectBox.PressEnter(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Enter button handler
            </summary>
        </member>
        <member name="T:SpreadsheetView.SpreadsheetForm">
            <summary>
            Spreadsheet Form Application.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.#ctor">
            <summary>
            Creates an empty spreadsheet form.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Opens a spreadsheet form in a new window and either requests
            a new spreadsheet or requests to edit an existing spreadsheet.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.ConnectToServer(System.String)">
            <summary>
            Connects the client to the spreadsheet server.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.SetSpreadsheetNameAndPassword(System.String,System.String)">
            <summary>
            Sets the spreadsheet name and password.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.MessageReceived(System.Collections.ArrayList)">
            <summary>
            Handles messages from the server.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.SaveMenuItemClick(System.Object,System.EventArgs)">
            <summary>
            Saves changes to the current spreadsheet if already saved to a file
            or prompts the user to save it to a file.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.NewMenuItemClick(System.Object,System.EventArgs)">
            <summary>
            Opens a new spreadsheet form.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.OpenMenuMenuItemClick(System.Object,System.EventArgs)">
            <summary>
            Prompts the user to open an existing spreadsheet file.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.CloseMenuItemClick(System.Object,System.EventArgs)">
            <summary>
            Closes the current spreadsheet form (after appropriately 
            prompting the user if they want to save changes if needed).
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.CloseSpreadsheet(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Closes the current spreadsheet form (after appropriately 
            prompting the user if they want to save changes if needed).
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.ExitMenuItemClick(System.Object,System.EventArgs)">
            <summary>
            Closes any open forms (while appropriately prompting users if
            changes need to be saved) and exits the spreadsheet application.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.UndoMenuItemClick(System.Object,System.EventArgs)">
            <summary>
            Undoes the previous action committed by the user.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.HelpContentsMenuItemClick(System.Object,System.EventArgs)">
            <summary>
            Displays the help contents in a message box
            indicating to the user how to use the application.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.AboutMenuItemClick(System.Object,System.EventArgs)">
            <summary>
            Displays information about the application in a message box 
            including the version number and the authors. 
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.ConnectMenuItemClick(System.Object,System.EventArgs)">
            <summary>
            Represents Connect button click. Displays a connect boxs that prompts the user to entr a server ip.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.DisplaySelectedCellInformation(SpreadsheetView.SpreadsheetPanel)">
            <summary>
            Displays the name, the value and the contents of
            the cell, currently selected in the spreadsheet panel, in
            the form textboxes. 
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.CellContentsTextBoxTextChanged(System.Object,System.EventArgs)">
            <summary>
            Used to identify if the contents of the currently selected cell 
            have been changed by the user.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.ChangeSelectedCell(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Changes the selected cell of the spreadsheet panel. 
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.CommitChanges">
            <summary>
            Saves pending changes to spreadsheet after the server approves the changes.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.RefreshSelectedCell(System.String,System.String)">
            <summary>
            Evaluates the contents of a cell and displays 
            its resulting value in the spreadsheet panel.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.GetSelectedCellValue(System.String)">
            <summary>
            Retrieves the value of the given cell name 
            as a string.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.GetSelectedCellContents(System.String)">
            <summary>
            Retrieves the contents of the given cell name 
            as a string.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.PopulateCells">
            <summary>
            Displays the values of all the cells in 
            the actual spreadhseet panel after opening a 
            saved spreadsheet file.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.RecalculateCells(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Recalculates the cells that are directly or indirectly affected
            by the cell that most recently had its value changed.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.SetReadOnly">
            <summary>
            Make the spreadsheet readonly.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.EnableEditing">
            <summary>
            Make the spreadsheet editable.
            </summary>
        </member>
        <member name="F:SpreadsheetView.SpreadsheetForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpreadsheetView.SpreadsheetForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpreadsheetView.FormHelper">
            <summary>
            Class with methods that assist the functionality of 
            thh Spreadhseet Form. 
            </summary>
        </member>
        <member name="M:SpreadsheetView.FormHelper.IsValidCellName(System.String)">
            <summary>
            Determines if the given cell name is valid.
            </summary>
        </member>
        <member name="M:SpreadsheetView.FormHelper.NormalizeCellName(System.String)">
            <summary>
            Normalizes the cell name.
            </summary>
        </member>
        <member name="M:SpreadsheetView.FormHelper.GetCellCoordinates(System.String,System.Int32@,System.Int32@)">
            <summary>
            Returns the cell coordinates using the given cell name.
            </summary>
        </member>
        <member name="M:SpreadsheetView.FormHelper.GetCellName(System.Int32,System.Int32)">
            <summary>
            Returns the cell name using the given coordinates.
            </summary>
        </member>
        <member name="M:SpreadsheetView.FormHelper.GetColumnNumber(System.String)">
            <summary>
            Returns the column number.
            </summary>
        </member>
        <member name="M:SpreadsheetView.FormHelper.GetRowNumber(System.String)">
            <summary>
            Returns the row number.
            </summary>
        </member>
        <member name="T:SpreadsheetView.FormHelper.Alphabet">
            <summary>
            Enum for the alphabet.
            </summary>
        </member>
    </members>
</doc>
